---
import { getCollection } from "astro:content";
import Layout from '../../../layouts/blog.astro';
import BlogPost from "../../../components/blog/blogpost.astro";
import Tags from "../../../components/blog/tags.astro";

export const prerender = true;

export async function getStaticPaths() {
  let allPosts = await getCollection("blog");
  allPosts = allPosts.sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag = '' } = Astro.params;
const { posts } = Astro.props;
---

<Layout title={'DragonForgeNEXUS&apos; ' + tag + ' blog posts'} description='Altie122'>
  <div class="container mx-auto">
    <h1 class="text-2xl text-center">DragonForgeNEXUS&apos; Blog</h1>
    <p class="text-center">Posts categorized as {tag}</p>
    <Tags />
    <div class="grid lg:grid-cols-2 md:grid-cols-1 gap-5 m-5">
    {posts && posts.map((post) => <BlogPost url={"/blog/posts/" + post.slug} title={post.data.title} image={post.data.image} date={post.data.pubDate} author={post.data.author} description={post.data.description}/>)}
  </div>
</Layout>
